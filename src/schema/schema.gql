# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Cart {
  createdAt: DateTime!
  items: [CartItem]!
  totalPrice: Float!
  updatedAt: DateTime!
}

type CartItem {
  product: Product!
  quantity: Int!
  totalPrice: Float!
  unitPrice: Float!
}

input CartItemDeleteInput {
  productId: String!
}

input CartItemInput {
  productId: String!
  quantity: Int!
}

type Category {
  name: String!
  uuid: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Image {
  product: Product!
  url: String!
  uuid: String!
}

input ImageInput {
  type: String!
}

input LikeInput {
  like: Boolean!
}

type Message {
  message: String!
  time: DateTime!
}

type Mutation {
  cartItemCreateorUpdate(cartItemInput: CartItemInput!): CartItem!
  cartItemDelete(cartItemDeleteInput: CartItemDeleteInput!): Message!
  orderCreate: Order!
  productChangeStatus(id: String!, statusInput: StatusInput!): Product!
  productCreate(productInput: ProductInput!): Product!
  productCreateOrUpdateLike(id: String!, likeInput: LikeInput!): Message!
  productDeleteLike(id: String!): Message!
  productUpdate(id: String!, updateProductInput: UpdateProductInput!): Product!
  productUploadImage(id: String!, imageInput: ImageInput!): Image!
}

type Order {
  createdAt: DateTime!
  items: [OrderItem]!
  totalPrice: Float!
  updatedAt: DateTime!
  uuid: String!
}

type OrderItem {
  product: Product!
  quantity: Int!
  totalPrice: Float!
  unitPrice: Float!
}

type PageInfo {
  currentPage: Int!
  itemsPerPage: Int!
  nextPage: Int
  previousPage: Int
  totalItems: Int!
  totalPages: Int!
}

type PaginatedProduct {
  edges: [ProductEdge]!
  pageInfo: PageInfo!
}

input PaginationOptionsProductInput {
  category: String = null
  page: Float = 1
  take: Float = 10
}

type Product {
  category: Category!
  createdAt: DateTime!
  deletedAt: DateTime
  description: String!
  dislikes: Int!
  images: [Image]!
  likes: Int!
  name: String!
  price: Float!
  status: Boolean!
  stock: Int!
  updatedAt: DateTime!
  uuid: String!
}

type ProductEdge {
  node: Product!
}

input ProductInput {
  categoryId: String!
  description: String!
  name: String!
  price: Float!
  stock: Int!
}

type Query {
  cartGet: Cart!
  productGetMany(paginationOptionsProduct: PaginationOptionsProductInput!): PaginatedProduct!
  productGetOne(id: String!): Product!
}

input StatusInput {
  status: Boolean!
}

input UpdateProductInput {
  categoryId: String
  description: String
  name: String
  price: Float
  stock: Int
}